name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.8.3]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.0-alpine
        env:
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
          POSTGRES_DB: bookstore_dev_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U bookstore_dev" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: View poetry --help
      run: poetry --help

    - name: Install dependencies
      shell: bash
      run: poetry install

    - name: Run migrations
      env:
        SQL_ENGINE: django.db.backends.postgresql
        SQL_DATABASE: bookstore_dev_db
        SQL_USER: bookstore_dev
        SQL_PASSWORD: bookstore_dev
        SQL_HOST: localhost
        SQL_PORT: 5432
      run: |
        poetry run python manage.py migrate

    - name: Test
      env:
        SQL_ENGINE: django.db.backends.postgresql
        SQL_DATABASE: bookstore_dev_db
        SQL_USER: bookstore_dev
        SQL_PASSWORD: bookstore_dev
        SQL_HOST: localhost
        SQL_PORT: 5432
      run: |
        poetry run python manage.py test